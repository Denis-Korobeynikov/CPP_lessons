0. Итераторы дают обобщённое представление о процессе перемещения по элементам контейнера. Они предоставляют простой и одинаковый для каждого контейнера интерфейс, позволяющий перемещаться внутри контейнера подобно тому, как указатели позволяют перемещаться по массиву. Итератор возможно реализовать, создав соответствующий класс, в котором переопределены операции: *, =, ==, !=, ++ и создав ф-ции позволяющие получить итератор, соответствующий первому и последнему элементам.

1. Библиотека STL содержит набор шаблонов, представляющих контейнеры, 
итераторы, объекты функций и алгоритмы. Создатели данной библиотеки рукаводствовались принципами не ООП, а обобщенного программирования, что и определило моногие из используемых в ней подходов.

2. Классы в STL:

а) vector
б) deque (двусторонняя очередь)
в) list
г) forwardlist (односвязный список)
д) queue
е) priorityqueue (Главное отличие от queue состоит в том, что в priority_queue наибольшее значение перемещается в начало очереди.)
ж) stack
з) set
и) multimap
к) pair
л) Ряд неупорядоченных ассоциативных контейнеров:
unordered_set, unordered_multiset, unordered_map, unordered_multimap.

3. Также библиотека содержит:

- Функциональные объекты (функторы):

Функтор — это любой объект, который может использоваться с операцией () в манере, подобной функции.
STL содержит ряд «элементарных» функторов, выполняющих элементарные арифметические операции.

- Алгоритмы:
STL разделяет библиотеку алгоритмов на четыре группы:
• немодифицирующие последовательные операции; <algorithm>
• модифицирующие последовательные операции;<algorithm>
• сортирующие и связанные с ними операции;<algorithm>
• обобщенные числовые операции. <numeric>

- Шаблон initializer_list